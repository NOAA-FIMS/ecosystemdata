[{"path":"https://NOAA-FIMS.github.io/ecosystemdata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bai Li. Author, maintainer. Kelli F. Johnson. Author.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Li B, Johnson KF (2025). ecosystemdata: Ecosystem database Ecopath Ecosim Atlantis models. R package version 0.1.0.","code":"@Manual{,   title = {ecosystemdata: Ecosystem database of Ecopath with Ecosim and Atlantis models},   author = {Bai Li and Kelli F. Johnson},   year = {2025},   note = {R package version 0.1.0}, }"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/index.html","id":"ecosystemdata","dir":"","previous_headings":"","what":"Ecosystem database of Ecopath with Ecosim and Atlantis models","title":"Ecosystem database of Ecopath with Ecosim and Atlantis models","text":"Ecosystem operating model output data.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/ewe_nwatlantic_base.html","id":null,"dir":"Reference","previous_headings":"","what":"EWE data for the NW Atlantic — ewe_nwatlantic_base","title":"EWE data for the NW Atlantic — ewe_nwatlantic_base","text":"Ecopath Ecosim data Northwest Atlantic ocean, data object different run. E.g., base base model run env run using environmental variables.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/ewe_nwatlantic_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EWE data for the NW Atlantic — ewe_nwatlantic_base","text":"","code":"ewe_nwatlantic_base  ewe_nwatlantic_env"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/ewe_nwatlantic_base.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EWE data for the NW Atlantic — ewe_nwatlantic_base","text":"object class tbl_df (inherits tbl, data.frame) 35640 rows 10 columns.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/ewe_nwatlantic_base.html","id":"ewe-nw-atlantic","dir":"Reference","previous_headings":"","what":"EWE NW Atlantic","title":"EWE data for the NW Atlantic — ewe_nwatlantic_base","text":"tibble 35640 rows following 10 columns: file_name path file name, note path relative path. column helpful understanding EWE model run data came . type type refers data type row , e.g., landings, catch, biomass, weight, mortality. year four-digit integer specifying year. month one- two-digit integer specifying month. function_group string specifying functional group row pertains . value real number containing value interest. fleet integer specifying fleet data pertains .","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/ewe_nwatlantic_base.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EWE data for the NW Atlantic — ewe_nwatlantic_base","text":"https://www.github.com/nmfs-ost/","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/ewe_nwatlantic_base.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EWE data for the NW Atlantic — ewe_nwatlantic_base","text":"Chagaris, D., Drew, K., Schueller, ., Cieri, M., Brito, J., Buchheister, . 2020. Ecological reference points Atlantic menhaden established using ecosystem model intermediate complexity. Frontiers Marine Science, 7:606417. 10.3389/fmars.2020.606417.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/get_functional_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the functional groups from an EwE file — get_functional_groups","title":"Get the functional groups from an EwE file — get_functional_groups","text":"Functional group names useful column names output data EwE model, thus, function way get automatically EwE output. functional group names come basic estimates file.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/get_functional_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the functional groups from an EwE file — get_functional_groups","text":"","code":"get_functional_groups(file_path)"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/get_functional_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the functional groups from an EwE file — get_functional_groups","text":"file_path path EwE file.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/get_functional_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the functional groups from an EwE file — get_functional_groups","text":"tibble following three columns: function_group. full functional group name model. column helpful error checking debugging. species. species name functional group name. column contain text strings numbers special characters. potentially multiple rows species name can multiple age groups given species. group. group name string. column can contain digits, special characters, text strings. used delineate group within species. species multiple groups.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/get_functional_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the functional groups from an EwE file — get_functional_groups","text":"","code":"get_functional_groups(   file_path = fs::path(     system.file(\"extdata\", package = \"ecosystemdata\"),     \"ewe_nwatlantic\", \"base_run\", \"basic_estimates.csv\"   ) ) #> Error in dplyr::pull(dplyr::filter(utils::read.table(text = as.character(temp[-1]),     sep = \",\"), !is.na(V1)), V2):  #> Caused by error: #> ! object 'V2' not found"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/load_csv_ewe.html","id":null,"dir":"Reference","previous_headings":"","what":"Load in EwE monthly output data — load_csv_ewe","title":"Load in EwE monthly output data — load_csv_ewe","text":"function loads Ecopath Ecosim (EwE) monthly output data CSV file.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/load_csv_ewe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load in EwE monthly output data — load_csv_ewe","text":"","code":"load_csv_ewe(file_path, model_years, functional_groups)"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/load_csv_ewe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load in EwE monthly output data — load_csv_ewe","text":"file_path path CSV file containing EwE output data. model_years vector years corresponding model years. TODO: can removed utility function extract model years globally annual data functional_groups vector names functional groups model.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/load_csv_ewe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load in EwE monthly output data — load_csv_ewe","text":"","code":"if (FALSE) { # \\dontrun{ # The following example is not run by default because these files are only # included in the GitHub clone of the repository and not in the package data load_csv_ewe(   file_path = fs::path(     \"data-raw\", \"ewe_nwatlantic\", \"base_run\", \"biomass_monthly.csv\"   ),   model_years = 1985:2017,   functional_groups = get_functional_groups(     file_path = fs::path(       base_run_dir, \"basic_estimates.csv\"     )   ) ) } # }"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/load_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an ecosystem model — load_model","title":"Load an ecosystem model — load_model","text":"Load necessary files ecosystem model return single, long data frame information.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/load_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an ecosystem model — load_model","text":"","code":"load_model(..., type = c(\"ewe\", \"atlantis\"))"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/load_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an ecosystem model — load_model","text":"... Arguments passed onto lower level load_model_()* functions. needed load_model_ewe(), directory functional_groups. type string indicating type model data want load. default ewe. Strings lower case text.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/load_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an ecosystem model — load_model","text":"tibble returned matches structure ewe_nwatlantic_base.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/split_functional_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the functional groups into species and group — split_functional_groups","title":"Split the functional groups into species and group — split_functional_groups","text":"Split strings containing functional groups species group names. Functional groups can contain age ranges, plus groups, sub categories, e.g., juvenile. information extracted functional group name returned group name.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/split_functional_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the functional groups into species and group — split_functional_groups","text":"","code":"split_functional_groups(x)"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/split_functional_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the functional groups into species and group — split_functional_groups","text":"x character vector functional group names. often created running unique() functional group column data.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/split_functional_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the functional groups into species and group — split_functional_groups","text":"tibble following three columns: functional_group, species, group, returned.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/split_functional_groups.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split the functional groups into species and group — split_functional_groups","text":"Kelli F. Johnson","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/split_functional_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the functional groups into species and group — split_functional_groups","text":"","code":"# A hypothetical example of functional groups split_functional_groups(   c(\"spiny dogfish 0\", \"spiny dogfish 1-2\", \"spiny dogfish +\") ) #> # A tibble: 3 × 3 #>   functional_group  species       group #>   <chr>             <chr>         <chr> #> 1 spiny dogfish 0   spiny dogfish 0     #> 2 spiny dogfish 1-2 spiny dogfish 1-2   #> 3 spiny dogfish +   spiny dogfish +     split_functional_groups(c(\"spiny dogfish\", \"spiny dogfish juvenile\")) #> # A tibble: 2 × 3 #>   functional_group       species       group    #>   <chr>                  <chr>         <chr>    #> 1 spiny dogfish          spiny         dogfish  #> 2 spiny dogfish juvenile spiny dogfish juvenile data(\"ewe_nwatlantic_base\", package = \"ecosystemdata\") split_functional_groups(unique(ewe_nwatlantic_base[[\"functional_group\"]])) #> # A tibble: 22 × 3 #>    functional_group species      group #>    <chr>            <chr>        <chr> #>  1 striped bass 0   striped bass 0     #>  2 striped bass 2-5 striped bass 2-5   #>  3 striped bass 6+  striped bass 6+    #>  4 menhaden 0       menhaden     0     #>  5 menhaden 1       menhaden     1     #>  6 menhaden 2       menhaden     2     #>  7 menhaden 3       menhaden     3     #>  8 menhaden 4       menhaden     4     #>  9 menhaden 5       menhaden     5     #> 10 menhaden 6+      menhaden     6+    #> # ℹ 12 more rows"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/use_testthat_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create tests/testthat/test-*.R test file — use_testthat_template","title":"Create tests/testthat/test-*.R test file — use_testthat_template","text":"helper function creates new test file testthat using template available within templates folder package. test file created \"tests/testthat\" directory name based input argument name. test file already exists, error message returned changes made.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/use_testthat_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create tests/testthat/test-*.R test file — use_testthat_template","text":"","code":"use_testthat_template(name)"},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/use_testthat_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create tests/testthat/test-*.R test file — use_testthat_template","text":"name character string providing name R function want test. name used create file name, .e., tests/testthat/test-{name}.R. name specified, function able create file name error returned.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/use_testthat_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create tests/testthat/test-*.R test file — use_testthat_template","text":"successful, function invisibly returns TRUE allow chaining commands. function unsuccessful, error message returned. Two messages also returned usethis package, used function. first states ecosystemdata project computer. second states file path newly created file. file automatically opened.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/use_testthat_template.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create tests/testthat/test-*.R test file — use_testthat_template","text":"three minimum testing criteria ecosystemdata, validated every R function within package. template file sets section three following test criteria: Input output correctness (IO correctness): ensure function behaves expected correct inputs returns expected outputs. Edge-case handling (Edge handling): validate function's performance invalid inputs unusual scenarios. Built-errors warnings (Error handling): confirm appropriate error warning messages triggered exceptional conditions. every expectation within test file call #' @description fits one line describing test. information used bookdown report testing results.","code":""},{"path":"https://NOAA-FIMS.github.io/ecosystemdata/reference/use_testthat_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create tests/testthat/test-*.R test file — use_testthat_template","text":"","code":"# Create a new test file named \"test-new_function\" for `new_function()` if (FALSE) { # \\dontrun{ ecosystemdata:::use_testthat_template(\"new_function\") } # }"}]
